<?xml version="1.0" encoding="UTF-8"?>
<service-task-definition>

  <label>Sending FAX by Twilio</label>
  <last-modified>2017-12-22</last-modified>

  <configs>
    <config name="AccountSid" required="true">
      <label>C1. ACCOUNT SID</label>
    </config>
    <config name="AuthToken" required="true">
      <label>C2. AUTH TOKEN</label>
    </config>
    <config name="From" required="true">
      <label>C3. From Telephone Number (You got at Twilio) ex. +8150XXXXXXXX</label>
    </config>
    <config name="To" required="true" el-enabled="true">
      <label>I1. To Telephone Number ex. +8175XXXXXXXX</label>
    </config>
    <config name="PdfUrl" required="true" el-enabled="true">
      <label>I2. URL of PDF sending as FAX</label>
    </config>
    <config name="StatusUrlItem" form-type="SELECT" select-data-type="STRING_TEXTFIELD">
      <label>O1. Data Item to save status confirmation url</label>
    </config>
    <config name="FaxSidItem" form-type="SELECT" select-data-type="STRING_TEXTFIELD">
      <label>O2. Data Item to save FAX SID</label>
    </config>
    <config name="ErrorItem" form-type="SELECT" select-data-type="STRING_TEXTAREA">
      <label>O3. Data Item to save error</label>
    </config>
  </configs>
  
  <script><![CDATA[
(function(){
  var accountSid = configs.get("AccountSid");
  var authToken = configs.get("AuthToken");
  var from = configs.get("From");
  var to = configs.get("To");
  var pdfUrl = configs.get("PdfUrl");
  var statusUrlItem = configs.get("StatusUrlItem");
  var faxSidItem = configs.get("FaxSidItem");
  var errorItem = configs.get("ErrorItem");

  var response;
  try{
    response = httpClient.begin()
      .basic(accountSid, authToken)
      .formParam('To', to)
      .formParam('From', from)
      .formParam('MediaUrl', pdfUrl)
      .formParam('quality', 'standard')
      .post('https://fax.twilio.com/v1/Faxes');
  } catch(e) {
    if(errorItem != null) {
      engine.setDataByNumber(errorItem, e.message);
      return; // ここで終了
    }
    throw e;
  }

  if (response.getStatusCode() != 201) {
    var error = response.getStatusCode() + "\n" + response.getResponseAsString();
    if (errorItem != null) {
      engine.setDataByNumber(errorItem, error);
      return; // ここで終了
    }
    throw error;
  }

  var responseJson = JSON.parse(response.getResponseAsString());
  if (statusUrlItem != null) {
    engine.setDataByNumber(statusUrlItem, responseJson["url"]);
  }
  if (faxSidItem != null) {
    engine.setDataByNumber(faxSidItem, responseJson["sid"]);
  }
  engine.setDataByNumber(errorItem, '');
})();
  ]]></script>
  
  <icon>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</service-task-definition>
