<?xml version="1.0" encoding="UTF-8"?><service-task-definition>

<label>HTTP Files Get</label>
<label locale="ja">HTTP ファイル取得</label>

<summary>Download via HTTP and Add to file-type data</summary>
<summary locale="ja">HTTPでファイルをダウンロードし、ファイル型データ項目に追加します</summary>

<last-modified>2017-11-19</last-modified>

<help-page-url>https://support.questetra.com/addons/http-filesget/</help-page-url>
<help-page-url locale="ja">https://support.questetra.com/ja/templates/http-filesget/</help-page-url>

<configs>
  <config name="conf_DataIdA" required="true" form-type="SELECT" select-data-type="STRING_TEXTFIELD|SELECT_SINGLE">
    <label>A: Select STRING/SELECT DATA for File URL</label>
    <label locale="ja">A: File URL が格納されている文字列型or選択肢型データを選択してください</label>
  </config>
  <config name="conf_DataIdB" required="true" form-type="SELECT" select-data-type="FILE">
    <label>B: Select FILE DATA for File Saved (update)</label>
    <label locale="ja">B: ファイルが追加格納されるファイル型データを選択してください (更新)</label>
  </config>
  <config name="conf_DataIdX" required="false" form-type="SELECT" select-data-type="STRING_TEXTAREA">
    <label>X: Select STRING DATA for Access Log (update)</label>
    <label locale="ja">X: 通信ログが格納される文字列型データを選択してください (更新)</label>
  </config>
</configs>


<script><![CDATA[
// HTTP Files Get (ver. 20171119)
// (c) 2017, Questetra, Inc. (the MIT License)


//// == Config Retrieving / 工程コンフィグの参照 ==
var dataIdA = configs.get( "conf_DataIdA" ) + "";
var dataIdB = configs.get( "conf_DataIdB" ) + "";
var dataIdX = configs.get( "conf_DataIdX" ) + "";
// convert 'java.lang.String' to 'javascript string'


//// == Data Retrieving / ワークフローデータの参照 ==
var fileUrl = "";
if( engine.findDataDefinitionByNumber( dataIdA ).matchDataType( "SELECT_SINGLE" ) ){
    fileUrl = engine.findDataByNumber( dataIdA ).get(0).getValue() + "";
}else{
    fileUrl = engine.findDataByNumber( dataIdA ) + "";
}
var processFiles = engine.findDataByNumber( dataIdB );
// java.util.ArrayList <com.questetra.bpms.core.event.scripttask.QfileView>
if (processFiles === null) {
  processFiles = new java.util.ArrayList();
}


//// == Calculating / 演算 ==
// File Name
//var arrStr   = fileUrl.split("/");
//var fileName = arrStr[arrStr.length - 1];
var fileName = fileUrl.match(".+/(.+?)([\?#;].*)?$")[1];
if (fileName === ""){ fileName = "NoName"; }

// Access to the URL
var httpRequest = httpClient.begin(); // HttpRequestWrapper
// com.questetra.bpms.core.event.scripttask.HttpClientWrapper
var response = httpRequest.get( fileUrl ); // HttpResponseWrapper
var httpStatus = response.getStatusCode() + "";
var accessLog = "---GET request--- " + httpStatus + "\n";

// Error Handling
// (no action)


//// == Data Updating / ワークフローデータへの代入 ==
processFiles.add(
  new com.questetra.bpms.core.event.scripttask.NewQfile( 
    fileName, response.getContentType(), response.getResponse()
  )
);
engine.setDataByNumber( dataIdB, processFiles );
if ( dataIdX !== "" ){ engine.setDataByNumber( dataIdX, accessLog ); }
]]></script>


<icon>
iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAACQ0lEQVRYR+2XS3LaQBCG50esWHGD
kBuEE1jeUT1UJTlBnBMknCC5gckJTG5gV6GBneUThJzA5ATBVZRYjTrVWEoJ9BzA9sazopCm+5ue
vx+CeuGFF/avXgEaRWAwGPQAvJHr2mw2v8MwXJ3q6ioBhsOhH8fxJYB3WYfMvGTm0Ww2uz4WpBRA
a32plPpa5YCZJ8aYz8dAFAJorcWxANQuZv5hjKkErTKSA5D79jzvl1KqW+s9ecFa+1Z+ep53xsyi
l6W19m4+ny/rbOQAXE6fMS6izAHLFUVRNKoSbQ6AiEIAZ3XkTZ+LYKMo6pdBPDlAAhoGQXBeBP1c
AArA+XQ6DfchigCuAFzUhZiZb1qt1tha2wUwTgtV2b6ybPkPQERSbMT5TtEpM5g9URPdMPOdMcYv
jIA4B3DrknquAEopyZQJM/80xixSkG0EiOgeQK8u7NnnBwBkt4+DIBjJHyCiCwBXLs63GzOiIqJr
AO9dbKRlXACc8j6O44+e562yipbq2W63e3EcfwDwpSmIHAJa678ud1+mZt/3u51O57apiAVSMkkA
uClx+p5EYb8VE1Gj9M1lAREt63K4AHBlre2nzeZQHW21pLWeKKU+uUaBmRfGmH6SwtI9nRcz/0HS
fu+ddz/eoUxEUkOcUjj1JXpK68B3AN8OgTh0DzM/RFHUy5ZiqeeNU+hQx4n6H5RSvlTEnWaUDKES
jZPNA/ug0hNk1kzLceFMmBaWY05ZtHe9Xi/2B5NG3wWnBtnpKU9pvInt1wj8AxoJCp7R7cV+AAAA
AElFTkSuQmCC
</icon>

</service-task-definition>
